{"version":3,"sources":["webpack:///./src/app/shared/core/wdapi.service.ts","webpack:///./src/app/shared/services/account.service.ts","webpack:///./src/app/shared/services/question.service.ts","webpack:///./src/app/shared/services/rating.service.ts","webpack:///./src/app/shared/page/page.component.ts","webpack:///./src async","webpack:///./src/main.client.ts","webpack:///./src/app/client/app.component.ts","webpack:///./src/app/client/app.module.ts","webpack:///./src/app/client/app.routing.ts","webpack:///./src/app/shared/avatar/avatar.component.ts","webpack:///./src/app/shared/core/basemodal.service.ts","webpack:///./src/app/shared/core/html-outlet.directive.ts","webpack:///./src/app/shared/game-elements/achievements.component.ts","webpack:///./src/app/shared/game-elements/game-elements.module.ts","webpack:///./src/app/shared/game-elements/multiple-choice.component.ts","webpack:///./src/app/shared/game-elements/rating.component.ts","webpack:///./src/app/shared/models/nav-menu.ts","webpack:///./src/app/shared/models/rating.ts","webpack:///./src/app/shared/nav-menu/nav-menu.component.ts","webpack:///./src/app/shared/nav-menu/nav-menu.service.ts","webpack:///./src/app/shared/page/page.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/client/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\n//Nodig om een object om te toveren in een promise.\r\nimport 'rxjs/Rx';\r\n\r\n\r\n@Injectable()\r\nexport class wdApi {\r\n\r\n    constructor(private http: Http) { } \r\n\r\n    //public urlPrefix = 'http://student.aii.avans.nl/doc/ssmulder/api';\r\n    //public urlPrefix = 'http://localhost:65418/api';\r\n    //public urlPrefix = 'http://localhost:8001/api';\r\n    //public urlPrefix = 'http://webdictaat.azurewebsites.net/api';\r\n    public urlPrefix = \"http://webdictaat.aii.avans.nl/api\";\r\n\r\n    public get(url) {\r\n        return this.http.get(this.urlPrefix + url, { withCredentials: true }).catch(this.handleError);\r\n    }\r\n\r\n    public post(url, data) {\r\n        return this.http.post(this.urlPrefix + url, data, { withCredentials: true }).catch(this.handleError);\r\n    }\r\n\r\n    public postFile(url: string, file: File) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let formData: FormData = new FormData();\r\n            let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\r\n            formData.append(\"file\", file, file.name);\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(xhr.response);\r\n                    } else {\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            };\r\n\r\n            debugger;\r\n\r\n            xhr.open('POST', this.urlPrefix + url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.send(formData);\r\n\r\n        });\r\n\r\n       \r\n    }\r\n\r\n    public put(url, data) {\r\n        return this.http.put(this.urlPrefix + url, data, { withCredentials: true }).catch(this.handleError);\r\n    }\r\n\r\n    delete(url) {\r\n        return this.http.delete(this.urlPrefix + url, { withCredentials: true }).catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/core/wdapi.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { wdApi } from '../core/wdapi.service';\r\n//Nodig om een object om te toveren in een promise.\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { User } from '../models/user';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n\r\n    //the user\r\n    private user: User;\r\n    private subject: Subject<User> = new Subject<User>();\r\n\r\n    constructor(private wdapi: wdApi) {\r\n        this.wdapi.get(\"/account/Current\")\r\n            .toPromise()\r\n            .then(response => {\r\n                this.user = response.json() as User;\r\n                this.subject.next(this.user);\r\n            });\r\n    }\r\n\r\n    public Login(): void {\r\n        window.location.href = this.wdapi.urlPrefix + \"/account/ExternalLogin?returnurl=\" + window.location;\r\n    }\r\n\r\n    public Logoff(): void {\r\n        //redrict to home after logout\r\n        window.location.href = this.wdapi.urlPrefix + \"/account/LogOff?returnurl=\" + window.location;\r\n    }\r\n\r\n    public getUser(): Observable<User> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    public update(): void {\r\n        this.subject.next(this.user);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/account.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\n//Nodig om een object om te toveren in een promise.\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { wdApi } from '../core/wdapi.service';\r\nimport { BaseModalService } from '../core/basemodal.service';\r\n\r\nimport { Question } from '../models/question';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class QuestionsService extends BaseModalService{\r\n\r\n    constructor(private wdapi: wdApi)\r\n    {\r\n        super();\r\n    }\r\n\r\n    public addQuestion(dictaatName: String, question: Question): Promise<Question> {\r\n\r\n        let url: string = \"/dictaten/\" + dictaatName + '/questions';\r\n\r\n        return this.wdapi.post(url, question)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Question\r\n            })\r\n            .catch(() => {\r\n                this.resolveCancel(); //hier nog niet bij mee\r\n            });\r\n    }\r\n\r\n    public getQuestion(dictaatName: String, questionId: number): Promise<Question> {\r\n\r\n        if (!questionId) {\r\n            return new Promise<Question>((resolve, reject) => {\r\n                reject(\"Cannot load question without questionId\");\r\n            });\r\n        }\r\n\r\n        let url: string = \"/dictaten/\" + dictaatName + '/questions/' + questionId;\r\n\r\n        return this.wdapi.get(url)\r\n            .toPromise()\r\n            .then(response => response.json() as Question)\r\n            \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/question.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\n//Nodig om een object om te toveren in een promise.\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { wdApi } from '../core/wdapi.service';\r\n\r\nimport { Rating, Rate } from '../models/rating';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class RatingService {\r\n\r\n    constructor(private wdapi: wdApi) { }\r\n\r\n    public isModalVisible: boolean = false;\r\n    private subject: Subject<boolean> = new Subject<boolean>();\r\n\r\n    public getIsModalVisible(): Observable<boolean> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    private resolveAddRating;\r\n    private resolveCancel;\r\n\r\n    public ShowModal(): Promise<Rating> {\r\n        this.isModalVisible = true;\r\n        this.subject.next(this.isModalVisible);\r\n        return new Promise<Rating>((resolve, reject) => {\r\n            this.resolveAddRating = resolve;\r\n            this.resolveCancel = reject;\r\n        });\r\n    }\r\n\r\n    public CancelModal(): void {\r\n        this.resolveCancel();\r\n        this.isModalVisible = false;\r\n        this.subject.next(this.isModalVisible);\r\n    }\r\n\r\n    public CompleteModal(rating: Rating) {\r\n        this.resolveAddRating(rating);\r\n        this.isModalVisible = false;\r\n        this.subject.next(this.isModalVisible);\r\n    }\r\n\r\n    public addRating(dictaatName: String, rating: Rating): Promise<Rating> {\r\n\r\n        let url: string = \"/dictaten/\" + dictaatName + '/rating';\r\n\r\n        return this.wdapi.post(url, rating)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Rating\r\n            })\r\n            .catch(() => {\r\n                this.resolveCancel(); //hier nog niet bij mee\r\n                return this.handleError;\r\n            });\r\n    }\r\n\r\n    public SendRate(dictaatName: String, ratingId: number, rate: Rate): Promise<Rate> {\r\n\r\n        let url: string = \"/dictaten/\" + dictaatName + '/rating/' + ratingId + '/rates';\r\n\r\n        return this.wdapi.post(url, rate)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Rate\r\n            })\r\n            .catch(() => {\r\n                return this.handleError;\r\n            });\r\n    }\r\n\r\n    public getRating(dictaatName: String, ratingId: number): Promise<Rating> {\r\n\r\n        if (!ratingId) {\r\n            return new Promise<Rating>((resolve, reject) => {\r\n                reject(\"Cannot load rating without ratingId\");\r\n            });\r\n        }\r\n\r\n        let url: string = \"/dictaten/\" + dictaatName + '/rating/' + ratingId;\r\n\r\n        return this.wdapi.get(url)\r\n            .toPromise()\r\n            .then(response => response.json() as Rating);\r\n\r\n    }\r\n\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/rating.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { PageService } from './page.service';\r\n\r\n@Component({\r\n    selector: \"wd-page\",\r\n    template: `\r\n    <div *ngIf=\"page\">\r\n        <html-outlet [html]=\"page\"></html-outlet>\r\n    </div>\r\n`,\r\n    providers: [PageService]\r\n})\r\nexport class PageComponent implements OnInit {\r\n\r\n    private page;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private pageService: PageService\r\n    ) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.route.params.forEach((params: Params) => {\r\n            let name = params['pageName'];\r\n            this.pageService.getPage(name)\r\n                .then(page => \r\n                    this.page = page);\r\n        });\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/page/page.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 379;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 379\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { ClientsModule } from './app/client/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'jquery';\r\nimport 'jquery-ui';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(ClientsModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.client.ts","import { Component  } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: \"wd-client-app\",\r\n    templateUrl: \"./app.component.html\",\r\n})\r\nexport class AppComponent {\r\n\r\n    public Title: string = \"Webdictaat\";\r\n\r\n    public showSidebar: boolean = false;\r\n\r\n    constructor(private router: Router) {\r\n        router.events.subscribe((val) => this.showSidebar = false);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/client/app.component.ts","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule }    from '@angular/http';\r\nimport { LocationStrategy, HashLocationStrategy} from '@angular/common';\r\n\r\n//components\r\nimport { AppComponent } from './app.component';\r\nimport { routing } from './app.routing';\r\nimport { PageComponent } from '../shared/page/page.component';\r\nimport { HtmlOutlet } from '../shared/core/html-outlet.directive';\r\nimport { NavMenuComponent } from '../shared/nav-menu/nav-menu.component';\r\nimport { AvatarComponent }  from '../shared/avatar/avatar.component';\r\n\r\nimport { QuestionsService } from '../shared/services/question.service';\r\nimport { AccountService } from '../shared/services/account.service';\r\nimport { RatingService } from '../shared/services/rating.service';\r\nimport { wdApi } from '../shared/core/wdapi.service';\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, HttpModule, routing],\r\n    declarations: [HtmlOutlet, AppComponent, PageComponent, NavMenuComponent, AvatarComponent],\r\n    providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy },\r\n        QuestionsService, AccountService, RatingService, wdApi\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class ClientsModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/client/app.module.ts","import { ModuleWithProviders }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageComponent } from '../shared/page/page.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: ':pageName',\r\n        component: PageComponent\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/client/app.routing.ts","import { Component,  OnInit, Input } from '@angular/core';\r\nimport { Dictaat } from '../models/dictaat';\r\n\r\nimport { AccountService } from '../services/account.service';\r\nimport { User } from '../models/user';\r\n\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: \"wd-avatar\",\r\n    template: `\r\n<div *ngIf=\"user\">\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li class=\"item-hover\" routerLink=\"/profile\">\r\n            <p class=\"navbar-text\">Signed in as {{user.email}}</p>\r\n        </li>\r\n        <li>\r\n            <button class=\"btn btn-default navbar-btn\" (click)=\"Logout()\">Logout</button>\r\n             \r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div *ngIf=\"!user\">\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li>\r\n            <button class=\"btn btn-default navbar-btn\" (click)=\"Login()\">Login</button>\r\n        </li>\r\n    </ul>\r\n</div>\r\n`,\r\n    providers: []\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n\r\n    public user: User;\r\n   \r\n    constructor(private accountService: AccountService) { }\r\n\r\n    public ngOnInit(): void {\r\n\r\n        this.accountService.getUser()\r\n            .subscribe(user => {\r\n                this.user = user as User\r\n            });\r\n    }\r\n\r\n    public Login(): void {\r\n        this.accountService.Login();\r\n        \r\n    }\r\n\r\n    public Logout(): void {\r\n        this.accountService.Logoff();\r\n    }\r\n   \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/avatar/avatar.component.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\n//Nodig om een object om te toveren in een promise.\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class BaseModalService {\r\n\r\n    public isModalVisible: boolean = false;\r\n    private subject: Subject<boolean> = new Subject<boolean>();\r\n\r\n    protected resolveComplete;\r\n    protected resolveCancel;\r\n\r\n    public getIsModalVisible(): Observable<boolean> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    public ShowModal(): Promise<any> {\r\n        this.isModalVisible = true;\r\n        this.subject.next(this.isModalVisible);\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.resolveComplete = resolve;\r\n            this.resolveCancel = reject;\r\n        });\r\n    }\r\n\r\n    public CancelModal(): void {\r\n        this.resolveCancel();\r\n        this.isModalVisible = false;\r\n        this.subject.next(this.isModalVisible);\r\n    }\r\n\r\n    public CompleteModal(objectToResolve: any) {\r\n        this.resolveComplete(objectToResolve);\r\n        this.isModalVisible = false;\r\n        this.subject.next(this.isModalVisible);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/core/basemodal.service.ts","//stackoverflow.com/questions/40060498/angular-2-1-0-create-child-component-on-the-fly-dynamically/40080290#40080290\r\nimport {\r\n    Component,\r\n    Directive,\r\n    NgModule,\r\n    Input, Output,\r\n    EventEmitter,\r\n    ViewContainerRef,\r\n    Compiler,\r\n    ComponentFactory,\r\n    ModuleWithComponentFactories,\r\n    ComponentRef,\r\n    ReflectiveInjector,\r\n    NgZone\r\n} from '@angular/core';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n\r\nimport { RouterModule }  from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameElementsModule } from '../game-elements/game-elements.module';\r\n\r\nimport { QuestionsService } from '../services/question.service';\r\nimport { RatingService } from '../services/rating.service';\r\n\r\nexport function createComponentFactory(compiler: Compiler, metadata: Component): Promise<ComponentFactory<any>> {\r\n    const cmpClass = class DynamicComponent { };\r\n    const decoratedCmp = Component(metadata)(cmpClass);\r\n\r\n    @NgModule({\r\n        imports: [BrowserModule, CommonModule, RouterModule, GameElementsModule],\r\n        providers: [QuestionsService, RatingService],\r\n        declarations: [decoratedCmp]\r\n    })\r\n    class DynamicHtmlModule { }\r\n\r\n    return compiler.compileModuleAndAllComponentsAsync(DynamicHtmlModule)\r\n        .then((moduleWithComponentFactory: ModuleWithComponentFactories<any>) => {\r\n            return moduleWithComponentFactory.componentFactories.find(x => x.componentType === decoratedCmp);\r\n        });\r\n}\r\n\r\n@Directive({ selector: 'html-outlet' })\r\nexport class HtmlOutlet {\r\n    @Input() html: string;\r\n    cmpRef: ComponentRef<any>;\r\n\r\n    @Output()\r\n    public afterCompile = new EventEmitter();\r\n\r\n    constructor(private vcRef: ViewContainerRef, private compiler: Compiler) { }\r\n\r\n    ngOnChanges() {\r\n\r\n        const html = this.html;\r\n        if (!html) return;\r\n\r\n        if (this.cmpRef) {\r\n            this.cmpRef.destroy();\r\n        }\r\n\r\n        const compMetadata = new Component({\r\n            selector: 'dynamic-html',\r\n            template: this.html,\r\n        });\r\n\r\n        createComponentFactory(this.compiler, compMetadata)\r\n            .then(factory => {\r\n                const injector = ReflectiveInjector.fromResolvedProviders([], this.vcRef.parentInjector);\r\n                this.cmpRef = this.vcRef.createComponent(factory, 0, injector, []);\r\n                this.afterCompile.emit();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cmpRef) {\r\n            this.cmpRef.destroy();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/core/html-outlet.directive.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"wd-achievements\",\r\n    template: `\r\n        Hello world\r\n    `\r\n})\r\nexport class AchievementsComponent implements OnInit {\r\n\r\n\r\n    constructor(\r\n     \r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/game-elements/achievements.component.ts","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n//components\r\nimport { MultipleChoiceComponent } from './multiple-choice.component';\r\nimport { RatingComponent } from './rating.component';\r\nimport { AchievementsComponent } from './achievements.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule],\r\n    declarations: [MultipleChoiceComponent, RatingComponent, AchievementsComponent],\r\n    exports: [MultipleChoiceComponent, RatingComponent, AchievementsComponent]\r\n})\r\nexport class GameElementsModule {                                                                                                                                                                                                                        \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/game-elements/game-elements.module.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { QuestionsService } from '../services/question.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Question, QuestionAnswer } from '../models/question';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Component({\r\n    selector: \"wd-multiple-choice\",\r\n    styles: [`\r\n\r\n.answer {\r\n   max-width:100%;\r\n   white-space:normal;\r\n}    \r\n\r\n\r\n    `],\r\n    template: `\r\n        <div class='wd-component'>\r\n\r\n            <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n                <p>{{error}}</p>\r\n            </div>\r\n\r\n            <p *ngIf=\"!error && isAuth && !question\" class='default'>Loading...</p>\r\n      \r\n            <div class=\"bs-callout bs-callout-primary\" *ngIf=\"question\" >\r\n  \r\n                <h4>{{question.text}}</h4>\r\n\r\n                <div *ngIf=\"!isAuth\">\r\n                    <button class='btn btn-info btn-raised' (click)=\"login()\">Login to submit answers</button>\r\n                </div>\r\n\r\n                <div *ngIf=\"isAuth\">\r\n                    <div *ngFor='let answer of question.answers'>\r\n                        <button class=\"btn btn-raised btn-default answer\" (click)=\"giveAnswer(answer)\"\r\n                                [ngClass]=\"{ \r\n                                    'btn-success' :  selectedAnswer == answer  && selectedAnswer.isCorrect,\r\n                                    'btn-danger' : selectedAnswer == answer  && !selectedAnswer.isCorrect\r\n                                }\">\r\n                            {{answer.text}}\r\n                        </button>\r\n                    </div>\r\n\r\n                     <div *ngIf=\"selectedAnswer && selectedAnswer.isCorrect\">\r\n                        {{selectedAnswer.text}} is correct!\r\n                    </div>\r\n\r\n                    <div *ngIf=\"selectedAnswer && !selectedAnswer.isCorrect\">\r\n                        {{selectedAnswer.text}} is not correct.\r\n                        Feel free to try again!\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    `\r\n})\r\nexport class MultipleChoiceComponent implements OnInit {\r\n\r\n    //question id\r\n    @Input()\r\n    public qid: number; \r\n    public question: Question;\r\n    public selectedAnswer: QuestionAnswer;\r\n    public error: string;\r\n\r\n    public isAuth: boolean;\r\n\r\n    private dictaatName: string;\r\n\r\n    \r\n\r\n    constructor(\r\n        private questionsService: QuestionsService,\r\n        private route: ActivatedRoute,\r\n        private accountService: AccountService\r\n    ) { }\r\n\r\n    public ngOnInit() {\r\n\r\n        this.accountService.getUser()\r\n            .subscribe(user => {\r\n                this.isAuth = user != null\r\n            });\r\n\r\n        //Krijg initiele waarde van observable niet :(\r\n        this.accountService.update();\r\n\r\n        this.route.params.forEach((params: Params) => {\r\n            this.dictaatName = params['dictaatName'];\r\n            this.questionsService.getQuestion(this.dictaatName, this.qid)\r\n                .then(question => this.question = question)\r\n                .catch( reason => this.error = reason);\r\n        });\r\n\r\n        this.questionsService.getQuestion;\r\n    }\r\n\r\n\r\n    public giveAnswer(answer): void {\r\n        this.selectedAnswer = answer;\r\n    }\r\n\r\n    public login() {\r\n        this.accountService.Login();\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/game-elements/multiple-choice.component.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { RatingService } from '../services/rating.service';\r\nimport { AccountService } from '../services/account.service';\r\nimport { Rating, Rate } from '../models/rating';\r\n\r\n@Component({\r\n    selector: \"wd-rating\",\r\n    styles: [`\r\n        .emotion{\r\n             width: 35px; cursor: pointer;\r\n             -webkit-transition: all 0.4s; /* Safari */\r\n            transition: all 0.4s;\r\n            margin:4px;\r\n        }\r\n        .emotion.active { \r\n            transform: scale(1.3, 1.3); \r\n        }\r\n    `],\r\n    template: `\r\n    <div class='wd-component'>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n            <p>{{error}}</p>\r\n        </div>\r\n\r\n        <div class=\"bs-callout bs-callout-info\" *ngIf=\"rating\" >\r\n               \r\n            <h4>{{rating.title}}</h4>\r\n            <p>{{rating.description}}</p>\r\n\r\n            <div *ngIf=\"!isAuth\">\r\n                 <button class='btn btn-info btn-raised' (click)=\"login()\">Login to give feedback</button>\r\n            </div>\r\n\r\n            <div *ngIf=\"isAuth\">\r\n\r\n                <div *ngIf=\"!rating.myRate\">\r\n                    <div>\r\n                        <img (click)=\"setEmotion('sad')\" [ngClass]=\"{ 'active' : rate.emotion == 'sad' }\" class='emotion' src=\"http://webdictaat.azurewebsites.net/images/shared/sad.png\">\r\n                        <img (click)=\"setEmotion('happy')\" [ngClass]=\"{ 'active' : rate.emotion == 'happy' }\" class='emotion'  src=\"http://webdictaat.azurewebsites.net/images/shared/happy.png\">\r\n                    </div>\r\n\r\n                    <div *ngIf=\"rate.emotion\">\r\n                        <textarea class=\"form-control\" rows=\"3\" [(ngModel)]='rate.feedback' id=\"textArea\"></textarea>\r\n                        <span class=\"help-block\">Would you like to give feedback?</span>\r\n                        <button class='btn btn-info btn-raised' (click)=\"sendRate()\">Send rating</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"rating.myRate\">\r\n                    <p>Thank you for the feedback!</p>\r\n                    <p *ngIf=\"rating.myRate.feedback\"> \r\n                        <img width=\"30px\" *ngIf=\"rating.myRate.emotion == 0\" src=\"http://webdictaat.azurewebsites.net/images/shared/sad.png\">\r\n                        <img width=\"30px\" *ngIf=\"rating.myRate.emotion == 1\" src=\"http://webdictaat.azurewebsites.net/images/shared/happy.png\">\r\n                        - \"{{rating.myRate.feedback}}\"</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class RatingComponent implements OnInit {\r\n\r\n    private dictaatName: string;\r\n    private error: string;\r\n\r\n    //question id\r\n    @Input()\r\n    public rid: number; \r\n\r\n    public rating: Rating;\r\n    public rate: Rate = new Rate();\r\n    public isAuth: boolean;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private ratingService: RatingService,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    public ngOnInit() {\r\n\r\n        this.accountService.getUser()\r\n            .subscribe(user => {\r\n                this.isAuth = user != null\r\n            });\r\n\r\n        //Krijg initiele waarde van observable niet :(\r\n        this.accountService.update();\r\n\r\n        this.route.params.forEach((params: Params) => {\r\n            this.dictaatName = params['dictaatName'];\r\n            this.ratingService.getRating(this.dictaatName, this.rid)\r\n                .then(rating => {\r\n                    this.rating = rating;\r\n                })\r\n                .catch(reason => this.error = reason);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public login() {\r\n        this.accountService.Login();\r\n    }\r\n\r\n\r\n    public sendRate(): void {\r\n        this.ratingService.SendRate(this.dictaatName, this.rating.id, this.rate)\r\n            .then((rate) => this.rating.myRate = rate);\r\n    }\r\n\r\n    public setEmotion(emotion): void {\r\n        this.rate.emotion = emotion;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/game-elements/rating.component.ts","\r\nexport class NavMenu {\r\n    Name: string;\r\n    SubMenus: NavMenu[] = [];\r\n    MenuItems: NavMenuItem[] = [];\r\n    show: boolean = false;\r\n}\r\n\r\nexport class NavMenuItem {\r\n    public Name: string;\r\n    public Url: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/nav-menu.ts","export class Rating {\r\n    id: number;\r\n    title: string;\r\n    description: Boolean = false;\r\n    emotion: string;\r\n    feedback: string;\r\n    myRate: Rate;\r\n}\r\n\r\nexport class Rate {\r\n    id: number;\r\n    emotion: number;\r\n    feedback: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/rating.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { NavMenuService } from './nav-menu.service';\r\n\r\nimport { NavMenu } from '../models/nav-menu';\r\n\r\n@Component({\r\n    selector: \"wd-nav-menu\",\r\n    template: `\r\n<ul class=\"nav navbar-nav\" *ngIf=\"navMenu\" [ngClass]=\"{'dropdown-menu ': !isRoot}\">\r\n\r\n    <li *ngFor=\"let item of navMenu.MenuItems\" >\r\n        <a routerLink=\"{{item.Url}}\" routerLinkActive=\"active\">{{item.Name}}</a>\r\n    </li>\r\n\r\n    {{showMenu}}\r\n\r\n    <li class=\"dropdown\" *ngFor=\"let menu of navMenu.SubMenus\">\r\n\r\n        <a  (click)=\"menu.show = !menu.show\" class=\"dropdown-toggle\">{{menu.Name}}<span class=\"caret\"></span></a>\r\n      \r\n        <wd-nav-menu [navMenu]=\"menu\" [showMenu]=\"showMenu\"  (click)=\"menu.show = !menu.show\" *ngIf=\"menu.show\">\r\n        </wd-nav-menu>\r\n    </li>\r\n</ul>\r\n`,\r\n    providers: [NavMenuService]\r\n})\r\nexport class NavMenuComponent implements OnInit {\r\n\r\n    private page;\r\n\r\n    @Input()\r\n    public navMenu: NavMenu;\r\n\r\n    @Input()\r\n    public isRoot: boolean;\r\n\r\n    @Input()\r\n    public showMenu: boolean;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private navMenuService: NavMenuService\r\n    ) { }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.navMenu == null) {\r\n            this.navMenuService.getNavMenu()\r\n                .then(navMenu => {\r\n                    this.navMenu = navMenu\r\n                });\r\n        }\r\n    }\r\n\r\n    public toggleMenu() {\r\n        this.showMenu = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/nav-menu/nav-menu.component.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { Router} from '@angular/router';\r\n\r\n//Nodig om een object om te toveren in een promise.\r\n\r\nimport { NavMenu, NavMenuItem } from '../models/nav-menu';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class NavMenuService {\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private router: Router) { }\r\n\r\n    private menu: NavMenu; \r\n\r\n    public getNavMenu() : Promise<NavMenu>{\r\n        if (this.menu != null) {\r\n            return Promise.resolve(this.menu);\r\n        }\r\n        else{\r\n            return this.http.get('nav-menu.json')\r\n                .toPromise()\r\n                .then((response) => \r\n                    this.menu = response.json() as NavMenu\r\n                ).catch(this.handleError);\r\n        }\r\n    }\r\n\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/nav-menu/nav-menu.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\n//Nodig om een object om te toveren in een promise.\r\n\r\nimport { Page } from '../models/page';\r\nimport { PageSummary } from '../models/page-summary';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    public getPage(pageName: String) {\r\n        return this.http.get('pages/' + pageName + '.html', { withCredentials: true })\r\n            .toPromise()\r\n            .then(response => response.text()    \r\n            ).catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/page/page.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<div class=\\\"navbar navbar-default\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"showSidebar = !showSidebar\\\">\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{Title}}</a>\\r\\n    </div>\\r\\n    <div class=\\\"navbar-collapse collapse navbar-responsive-collapse\\\">\\r\\n\\t\\t  <wd-nav-menu [isRoot]=\\\"true\\\"></wd-nav-menu>\\r\\n      <wd-avatar></wd-avatar>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"side-nav-wrapper\\\" >\\r\\n  <nav class=\\\"side-nav\\\" [ngClass]=\\\"{'active' : showSidebar }\\\">\\r\\n    <wd-nav-menu [isRoot]=\\\"true\\\" ></wd-nav-menu>\\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n<router-outlet ></router-outlet>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"content\\\">\\r\\n\\t\\t<div class=\\\"left-menu\\\"></div>\\r\\n\\t\\t<div class=\\\"flex-1\\\">\\r\\n\\t\\t\\t<div class=\\\"main-content\\\">\\r\\n\\t\\t\\t\\t<router-outlet></router-outlet>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/client/app.component.html\n// module id = 398\n// module chunks = 1"],"sourceRoot":""}